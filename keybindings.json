// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+r",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+d",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+r",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+alt+s",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "shift+alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+oem_3",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "shift+alt+a",
        "command": "xandeer.aligncode",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-xandeer.aligncode",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    //   {
    // "key": "alt+t",
    // "command": "workbench.action.gotoLine"
    //   },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "alt+oem_1",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+alt+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    // {
    //     "key": "shift shift",
    //     "command": "workbench.action.quickOpen"
    // },
    // {
    //     "key": "ctrl+shift+f",
    //     "command": "search.action.find"
    // },
    {
        "key": "alt+1",
        "command": "editor.foldAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+2",
        "command": "macros.foldLevel2",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+3",
        "command": "macros.foldLevel3",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+4",
        "command": "macros.foldLevel4",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+5",
        "command": "macros.foldLevel5",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+6",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+c",
        "command": "workbench.files.action.showActiveFileInExplorer",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.files.pinActiveFile",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.pinEditor"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+/", // whatever keybindings you want
        "command": "runCommands",
        "args": {
            "commands": [
                "editor.action.commentLine",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus"
    },
    {
        "key": "f6",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "f7",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f12",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "alt+home",
        "command": "editor.action.goToTypeDefinition",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+end",
        "command": "editor.action.goToImplementation",
        "when": "editorTextFocus"
    },
]